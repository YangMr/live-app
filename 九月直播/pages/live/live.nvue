<template>
	<view class="page">
		<video class="video" :src="src" :controls="false" autoplay></video>
		<view :style="{'top' : statusBarHeight + 'px'}" class="text-white position-fixed left-0 right-0">
			<!-- 个人信息|观看人数 -->
			<view style="height:80rpx; " class="position-relative flex left-0 right-0 ">
				<view class="flex flex-1 align-center px-2" style="background-color: rgba(0,0,0,0.4);">
					<view class="p">
						<image :src="liveDetail.user.avatar || '../../static/tabbar/min.png'" style="width: 70rpx; height: 70rpx;"
							class="rounded-circle"></image>
					</view>
					<view class="flex-1 ml-1 flex flex-column justify-center">
						<text class="text-white font">{{liveDetail.user.username}}</text>
						<text class="text-white font-sm">{{liveDetail.look_count}}</text>
					</view>
					<view class="rounded-circle flex align-center justify-center bg-danger"
						style="width:70rpx; height : 70rpx;">
						<text class="text-white">+</text>
					</view>
				</view>
				<view class="flex-1 flex" style="background-color: rgba(0,0,0,0.4);">
					<scroll-view scroll-x="true" class="flex-1 flex">
						<view class="p" v-for="(item,index) in 20" :key="index">
							<image src="../../static/tabbar/min.png" style="width: 70rpx; height: 70rpx;"
								class="rounded-circle"></image>
						</view>
					</scroll-view>
					<!-- 观看人数 -->
					<view class="rounded-circle flex align-center bg-danger justify-center"
						style="width: 70rpx; height: 70rpx;">
						<text class="text-white font-sm">1000</text>
					</view>
				</view>
			</view>

			<!-- 用户金币数 -->
			<view class="my-2" style="height: 90rpx;">
				<view style="width: 325rpx; background-color: rgba(255,255,255,0.4);"
					class="px-2 flex align-center rounded-circle">
					<view class="p">
						<text class="text-warning font-md">金币</text>
					</view>
					<view class="flex-1  flex flex-column justify-center">
						<text class="text-white font">{{liveDetail.coin}}</text>
					</view>
				</view>
			</view>

			<!-- 礼物区域 -->
			<view style="height : 500rpx; width : 400rpx " class=" mt-2">
				<list insert-animation="default" delete-animation="default" style="width: 520rpx; height: 500rpx;">
					<cell :ref="'item' + index " class="flex align-center pt-3  px-3" v-for="(item,index) in gifts"
						:key="item.id">
						<view style="width: 325rpx; background-image: linear-gradient(to right,#BCABB1, #65AAF0);"
							class="flex align-center  rounded-circle">
							<view class="p">
								<image src="../../static/tabbar/min.png" style="width: 70rpx; height: 70rpx;"
									class="rounded-circle"></image>
							</view>
							<view class="flex-1  flex flex-column justify-center">
								<text class="text-white font">{{item.username}}</text>
								<text class="text-white font-sm">{{item.gift_name}}</text>
							</view>
							<view class="p">
								<image :src="item.gift_image || '/static/gift/4.png'"
									style="width: 70rpx; height: 70rpx;" class="rounded-circle"></image>
							</view>
						</view>


						<text class="text-warning font-lg ml-1" >X {{item.num}}</text>
					</cell>

				</list>
			</view>

			<!-- 弹幕区域 -->
			<view style="overflow: hidden; width:505rpx;height: 300rpx; bottom:130rpx; left:15rpx; right:15rpx;"
				class="position-fixed">
				<scroll-view scroll-with-animation :scroll-into-view="scrollIntoView" scroll-y="true"
					style="width : 505rpx; height:300rpx;">
					<view :id="'danmu' + item.id" v-for="(item,index) in list" :key="index"
						class="rounded mt-2 flex align-center px-2"
						style=" width:505rpx;background-color: rgba(255,255,255,0.3);">
						<view class="flex align-center"
							style="max-width: 130rpx;  min-width: 65rpx; min-height :75rpx;">
							<text class="text-danger font text-ellipsis">{{item.name}}:</text>
						</view>
						<view class="flex-1">
							<text class="text-white font" style="white-space: nowrap;">{{item.content}}</text>
						</view>
					</view>
				</scroll-view>
			</view>
		</view>

		<view class="position-fixed bottom-0 flex align-center justify-between"
			style="height : 130rpx;  box-sizing: border-box; left : 15rpx; right: 15rpx;">
			<view @click="handleOpenPopup('danmu')" class="flex align-center justify-center"
				style="width:195rpx; height :80rpx;background-color: rgba(255,255,255,0.1);border-radius: 40rpx;">
				<text class="font text-white">说点什么...</text>
			</view>
			<view class="flex align-center">
				<view style="height:80rpx; width: 80rpx; background-color: rgba(255,255,255,0.12);"
					class="flex mr-1 justify-center  rounded-circle align-center">
					<text class="iconfont text-white" style="font-size: 40px; ">&#xe633;</text>
				</view>
				<view @click="handleOpenPopup('gifts')" style="height:80rpx; width: 80rpx;"
					class="flex mr-1 justify-center rounded-circle align-center bg-warning">
					<text class="iconfont">&#xe67c;</text>
				</view>
				<view style="height:80rpx; width: 80rpx; background-color: rgba(255,255,255,0.12);"
					class="flex mr-1 justify-center  rounded-circle align-center">
					<text class="iconfont text-white">&#xe7cd;</text>
				</view>
				<view @click="handleCloseLive"
					style="height:80rpx; width: 80rpx; background-color: rgba(255,255,255,0.12);"
					class="flex mr-1 justify-center rounded-circle align-center">
					<text class="iconfont text-white">&#xe607;</text>
				</view>
			</view>
		</view>


		<uni-popup ref="popup" type="bottom">
			<view v-if="popupType === 'danmu'" class="bg-white flex align-center px-3" style="height :120rpx;">
				<input type="text" placeholder="说点什么呢..." v-model='content' style="height: 80rpx;"
					class="border rounded flex-1 px-3 font-md">
				<view @click="handleSubmit" :class="this.content == '' ? 'bg-main-disabled' : 'bg-main'"
					class=" flex ml-3  align-center py-2 rounded px-2 justify-center">
					<text class="font text-white">发送</text>
				</view>
			</view>

			<view v-if="popupType === 'gifts'" class="bg-white flex flex-column" style="height : 550rpx; ">
				<view class="flex align-center px-3 justify-between border-bottom" style="height:100rpx;">
					<text class="text-main">礼物</text>
					<text @click="handleClosePupup" class="iconfont">&#xe607;</text>
				</view>
				<view class="flex-1">
					<swiper :indicator-dots="true">
						<swiper-item v-for="(item,index) in newGiftList" :key="index" class="flex flex-wrap">
							<view @click="giftActiveId = mitem.id"
								:class="mitem.id == giftActiveId ? 'border boder-main' : ''"
								v-for="(mitem,index) in item" :key="index" style="width: 187.5rpx; height: 175rpx;"
								class="flex flex-column justify-center align-center">
								<image :src="'http://ws.9yuecloud.com' + mitem.image || '../../static/gift/1.png'"
									style="width: 100rpx; height: 100rpx;"></image>
								<view class="flex mt-1">
									<text class="text-warning font mr-1">{{mitem.name}}</text>
									<text class="text-secondary font">{{mitem.coin}}</text>
								</view>
							</view>
						</swiper-item>
					</swiper>
				</view>
				<view class="flex px-2 justify-end align-center border-top" style="height:100rpx;">
					<view class="flex mr-2 align-center justify-center bg-warning rounded"
						style="width:120rpx; height:70rpx;">
						<text class="font">充值</text>
					</view>
					<view class="flex align-center justify-center bg-main rounded" style="width:120rpx; height:70rpx;">
						<text class="text-white font" @click="sendGift">发送</text>
					</view>
				</view>
			</view>
		</uni-popup>
	</view>
</template>

<script>
	const dom = uni.requireNativePlugin('dom')
	import arr1To2 from "@/utils/utils.js"
	import Gift from "@/model/gift.js"
	import Live from "@/model/live.js"
	import ApiConfig from "@/config/api.js"
	export default {
		data() {
			return {
				user : null,
				id : 0,
				giftActiveId: 0,
				popupType: "danmu",
				statusBarHeight: 0,
				scrollIntoView: "",
				list: [],
				gifts: [],
				content: "",
				giftList: [],
				liveDetail: {
					"created_time": "",
					"id": 0,
					"title": "",
					"cover": "",
					"user_id": 0,
					"look_count": 0,
					"coin": 0,
					"key": "",
					"status": 0,
					"userId": 0,
					"user": {
						"id": 0,
						"username": "",
						"avatar": ""
					}
				},
				sign : ""
			}
		},
		onLoad(e) {
			this.id = e.id
			this.user = this.$store.state.user
			// 获取状态栏的高度
			const res = uni.getSystemInfoSync()
			this.statusBarHeight = res.statusBarHeight
			
			this.getGiftList()
			this.getLiveDetail()
		},
		computed: {
			newGiftList() {
				const newArrList = JSON.parse(JSON.stringify(this.giftList))
				return arr1To2(newArrList, 8)
			},
			src(){
				if(this.liveDetail.key == "" && this.sign == ""){
					return
				}
				return `${ApiConfig.pullStream}/live/${this.liveDetail.key}.flv?sign=${this.sign}`
			}
		},
		methods: {
			// 获取礼物数据方法
			async getGiftList(){
				const giftList = await Gift.getGiftList()
				this.giftList = giftList
			},
			// 获取指定直播间详情数据
			async getLiveDetail(){
				const liveDetail =await Live.getLiveDetail(this.id)
				this.liveDetail = liveDetail.data
				this.sign = liveDetail.sign
			},
			// 发送礼物方法
			sendGift(data) {
				this.$store.dispatch("authMethod",()=>{
					if (this.giftActiveId == 0) {
						return uni.showToast({
							title: "请选择要发送的礼物",
							icon: "none"
						})
					}
					
					
					//查找出对应的礼物
					let index = this.giftList.findIndex(item=>item.id === this.giftActiveId)
					
					if(index == -1){
						return;
					}
					
					let g = this.giftList[index];
					
					this.gifts.push({
						username : this.user.username,
						avatar : "",
						gift_name : g.name,
						gift_image : g.image,
						num : 1
					})
								
					this.toGiftBottom()
					this.autoHide()			
						
					//关闭送礼物弹出层
					this.handleClosePupup();
				})
			},
			// 发送弹幕方法
			send(data) {
				this.list.push(data)
				this.toBottom()
			},
			// 滚动条滚动到底部
			toBottom() {
				setTimeout(() => {
					// 获取list数组的长度
					let len = this.list.length
					// 判断数组是否有数据 以及 能否得到最后一条数据
					if (len > 0 && this.list[len - 1]) {
						// 如果能得到的话就通过scrollIntoView 滚动到对应元素的位置
						this.scrollIntoView = 'danmu' + this.list[len - 1].id
					}
				}, 2000)
			},
			toGiftBottom() {
				this.$nextTick(() => {
					// 获取礼物数组的最后一条数据的下标  5 4
					let index = this.gifts.length - 1;
					// 拿到最后一条数据的ref的名称
					let ref = 'item' + index;
					// 滚动到对应的元素位置
					dom.scrollToElement(this.$refs[ref][0], {})
				})

			},
			// 打开输入框弹窗
			handleOpenPopup(type) {
				this.popupType = type
				this.$refs.popup.open("bottom")
			},
			handleSubmit() {
			
				
				this.$store.dispatch("authMethod",()=>{
					
					if (this.content == "") {
						return
					}
					
					this.send({
						id: Math.random() * 100,
						name: this.user.username,
						content: this.content
					})
					
					this.content = ""
					
					this.handleClosePupup()
				})
				
			},
			// 关闭弹出层
			handleClosePupup() {
				this.$refs.popup.close()
			},
			// 关闭直播间
			handleCloseLive() {
				uni.navigateBack({
					delta: 1
				})
			},
			// 礼物自动消失方法
			autoHide() {
				if (this.gifts.length) {
					let timer = setTimeout(() => {
						this.gifts.splice(0, 1);
					}, 2000)
				}
			}
		}
	}
</script>

<style>
	.page,
	.video {
		flex: 1;
	}

	.status-bar {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
	}

	.footer {
		height: 125rpx;
		/* padding : 0 20rpx; */
		background-color: yellow;
		position: fixed;
		bottom: 0;
		left: 0;
		right: 0;
	}

	.demo {
		position: absolute;
		height: 80rpx;
		width: 80rpx;
		background-color: red;
	}

	/* text{
	color : #fff;
	font-size : 100rpx;
} */
</style>
